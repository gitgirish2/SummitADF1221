package oracle.summit.model.controlpostorder;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;

import oracle.jbo.server.EntityDefImpl;

import oracle.summit.base.SummitApplicationModuleImpl;
import oracle.summit.model.controlpostorder.common.AppModule;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 13 16:59:49 CDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppModuleImpl extends SummitApplicationModuleImpl implements AppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleImpl() {
    }
    
    public Result newEmployeeForNewDepartment(String deptName, Number regionId, String lastName, String firstName,
                                              Number salary) {
        oracle.jbo.domain.Date today = new Date(Date.getCurrentDate());
        Number objectId = new Number(0);
        
        // 1. Create a new employee
        EmpEOImpl newEmp = createNewEmp();
        // 2. Create a new department
        DeptEOImpl newDept = createNewDept();

        newDept.setName(deptName);
        newDept.setRegionId(regionId);
        // 3. Set the department id to which the employee pertains
        newEmp.setDeptId(newDept.getId().getSequenceNumber());
        newEmp.setLastName(lastName);
            newEmp.setFirstName(firstName);
            newEmp.setUserid((firstName + "." + lastName).substring(8));
        newEmp.setSalary(salary);
        // 4. Commit the transaction
        getDBTransaction().commit();
        // 5. Construct a bean to hold new department id and employee id
        Result result = new Result();
        result.setEmpId(newEmp.getId().getSequenceNumber());
        result.setDeptId(newDept.getId().getSequenceNumber());
        // 6. Return the result
        return result;
    }
    
    private DeptEOImpl createNewDept(){
        EntityDefImpl deptDef = DeptEOImpl.getDefinitionObject();
        return (DeptEOImpl) deptDef.createInstance2(getDBTransaction(), null);
    }
    
    private EmpEOImpl createNewEmp(){
        EntityDefImpl empDef = EmpEOImpl.getDefinitionObject();
        return (EmpEOImpl) empDef.createInstance2(getDBTransaction(), null);
    }
    
}
