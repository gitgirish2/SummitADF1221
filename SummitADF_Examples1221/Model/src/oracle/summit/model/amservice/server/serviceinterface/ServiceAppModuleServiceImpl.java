package oracle.summit.model.amservice.server.serviceinterface;

import java.lang.reflect.Method;

import java.util.List;

import javax.ejb.Remote;
import javax.ejb.Stateless;

import javax.interceptor.Interceptors;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.common.Diagnostic;
import oracle.jbo.common.sdo.SDOHelper;
import oracle.jbo.common.service.types.AttrCtrlHints;
import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.server.svc.ServiceContextInterceptor;
import oracle.jbo.server.svc.ServiceImpl;
import oracle.jbo.service.errors.ServiceException;

import oracle.summit.model.amservice.ServiceAppModuleImpl;
import oracle.summit.model.amservice.common.CustomersViewSDO;
import oracle.summit.model.amservice.common.OrdersViewSDO;
import oracle.summit.model.amservice.common.serviceinterface.ServiceAppModuleService;

import oracle.webservices.annotations.PortableWebService;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 11 14:32:50 CDT 2012
// ---------------------------------------------------------------------
@Interceptors({ ServiceContextInterceptor.class })
@Stateless(name = "oracle.summit.model.amservice.common.ServiceAppModuleServiceBean",
           mappedName = "ServiceAppModuleServiceBean")
@Remote(ServiceAppModuleService.class)
@PortableWebService(targetNamespace = "/oracle/summit/model/amservice/common/", serviceName = "ServiceAppModuleService",
                    portName = "ServiceAppModuleServiceSoapHttpPort",
                    endpointInterface = "oracle.summit.model.amservice.common.serviceinterface.ServiceAppModuleService")
public class ServiceAppModuleServiceImpl extends ServiceImpl implements ServiceAppModuleService {
    private static boolean _isInited = false;

    /**
     * This is the default constructor (do not remove).
     */
    public ServiceAppModuleServiceImpl() {
        init();
        setApplicationModuleDefName("oracle.summit.model.amservice.ServiceAppModule");
        setConfigurationName("ServiceAppModuleService");
    }

    /**
     * Generated method. Do not modify. Do initialization in the constructor
     */
    protected void init() {
        if (_isInited) {
            return;
        }
        synchronized (ServiceAppModuleServiceImpl.class) {
            if (_isInited) {
                return;
            }
            try {
                SDOHelper.INSTANCE.defineSchema("oracle/summit/model/amservice/common/serviceinterface/",
                                                "ServiceAppModuleService.xsd");
                _isInited = true;
            } catch (Throwable t) {
                ADFLogger.createADFLogger(Diagnostic.SERVINT_RT_LOGGER).severe(t);
            }
        }
    }


    /**
     * createCustomersView: generated method. Do not modify.
     */
    public CustomersViewSDO createCustomersView(CustomersViewSDO customersView) throws ServiceException {
        return (CustomersViewSDO) create(customersView, "CustomersView");
    }

    /**
     * updateCustomersView: generated method. Do not modify.
     */
    public CustomersViewSDO updateCustomersView(CustomersViewSDO customersView) throws ServiceException {
        return (CustomersViewSDO) update(customersView, "CustomersView");
    }

    /**
     * deleteCustomersView: generated method. Do not modify.
     */
    public void deleteCustomersView(CustomersViewSDO customersView) throws ServiceException {
        delete(customersView, "CustomersView");
    }

    /**
     * mergeCustomersView: generated method. Do not modify.
     */
    public CustomersViewSDO mergeCustomersView(CustomersViewSDO customersView) throws ServiceException {
        return (CustomersViewSDO) merge(customersView, "CustomersView");
    }

    /**
     * createOrdersView: generated method. Do not modify.
     */
    public OrdersViewSDO createOrdersView(OrdersViewSDO ordersView) throws ServiceException {
        return (OrdersViewSDO) create(ordersView, "OrdersView");
    }

    /**
     * updateOrdersView: generated method. Do not modify.
     */
    public OrdersViewSDO updateOrdersView(OrdersViewSDO ordersView) throws ServiceException {
        return (OrdersViewSDO) update(ordersView, "OrdersView");
    }

    /**
     * deleteOrdersView: generated method. Do not modify.
     */
    public void deleteOrdersView(OrdersViewSDO ordersView) throws ServiceException {
        delete(ordersView, "OrdersView");
    }

    /**
     * mergeOrdersView: generated method. Do not modify.
     */
    public OrdersViewSDO mergeOrdersView(OrdersViewSDO ordersView) throws ServiceException {
        return (OrdersViewSDO) merge(ordersView, "OrdersView");
    }

    /**
     * getDfltCtrlHints: generated method. Do not modify.
     */
    public List<AttrCtrlHints> getDfltCtrlHints(String viewName, String localeName) throws ServiceException {
        return super.getCtrlHints(viewName, localeName);
    }

    /**
     * findOrdersViewOrdersViewCriteria: generated method. Do not modify.
     */
    public List<OrdersViewSDO> findOrdersViewOrdersViewCriteria(FindCriteria findCriteria, String OrdId,
                                                                FindControl findControl) throws ServiceException {
        return (List<OrdersViewSDO>) find(findCriteria, findControl, "OrdersView", OrdersViewSDO.class,
                                          "OrdersViewCriteria", new NamedParam[] { new NamedParam("OrdId", OrdId) });
    }
}
