package oracle.summit.model.amservice.common.serviceinterface;

import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.soap.SOAPBinding;

import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import oracle.jbo.common.service.types.AttrCtrlHints;
import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.service.errors.ServiceException;

import oracle.summit.model.amservice.common.CustomersViewSDO;
import oracle.summit.model.amservice.common.OrdersViewSDO;

import oracle.webservices.annotations.PortableWebService;
import oracle.webservices.annotations.SDODatabinding;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 11 14:32:50 CDT 2012
// ---------------------------------------------------------------------
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.WRAPPED, style = SOAPBinding.Style.DOCUMENT)
@PortableWebService(targetNamespace = "/oracle/summit/model/amservice/common/", name = "ServiceAppModuleService",
                    wsdlLocation = "oracle/summit/model/amservice/common/serviceinterface/ServiceAppModuleService.wsdl")
@SDODatabinding(schemaLocation = "oracle/summit/model/amservice/common/serviceinterface/ServiceAppModuleService.xsd")
public interface ServiceAppModuleService {


    public static final String NAME = "{/oracle/summit/model/amservice/common/}ServiceAppModuleService";

    @WebMethod(action = "/oracle/summit/model/amservice/common/createCustomersView",
               operationName = "createCustomersView")
    @RequestWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/", localName = "createCustomersView")
    @ResponseWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/",
                     localName = "createCustomersViewResponse")
    @WebResult(name = "result")
    CustomersViewSDO createCustomersView(@WebParam(mode = WebParam.Mode.IN, name = "customersView")
                                         CustomersViewSDO customersView) throws ServiceException;

    @WebMethod(action = "/oracle/summit/model/amservice/common/updateCustomersView",
               operationName = "updateCustomersView")
    @RequestWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/", localName = "updateCustomersView")
    @ResponseWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/",
                     localName = "updateCustomersViewResponse")
    @WebResult(name = "result")
    CustomersViewSDO updateCustomersView(@WebParam(mode = WebParam.Mode.IN, name = "customersView")
                                         CustomersViewSDO customersView) throws ServiceException;

    @WebMethod(action = "/oracle/summit/model/amservice/common/deleteCustomersView",
               operationName = "deleteCustomersView")
    @RequestWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/", localName = "deleteCustomersView")
    @ResponseWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/",
                     localName = "deleteCustomersViewResponse")
    void deleteCustomersView(@WebParam(mode = WebParam.Mode.IN, name = "customersView")
                             CustomersViewSDO customersView) throws ServiceException;

    @WebMethod(action = "/oracle/summit/model/amservice/common/mergeCustomersView",
               operationName = "mergeCustomersView")
    @RequestWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/", localName = "mergeCustomersView")
    @ResponseWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/",
                     localName = "mergeCustomersViewResponse")
    @WebResult(name = "result")
    CustomersViewSDO mergeCustomersView(@WebParam(mode = WebParam.Mode.IN, name = "customersView")
                                        CustomersViewSDO customersView) throws ServiceException;

    @WebMethod(action = "/oracle/summit/model/amservice/common/createOrdersView", operationName = "createOrdersView")
    @RequestWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/", localName = "createOrdersView")
    @ResponseWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/",
                     localName = "createOrdersViewResponse")
    @WebResult(name = "result")
    OrdersViewSDO createOrdersView(@WebParam(mode = WebParam.Mode.IN, name = "ordersView")
                                   OrdersViewSDO ordersView) throws ServiceException;

    @WebMethod(action = "/oracle/summit/model/amservice/common/updateOrdersView", operationName = "updateOrdersView")
    @RequestWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/", localName = "updateOrdersView")
    @ResponseWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/",
                     localName = "updateOrdersViewResponse")
    @WebResult(name = "result")
    OrdersViewSDO updateOrdersView(@WebParam(mode = WebParam.Mode.IN, name = "ordersView")
                                   OrdersViewSDO ordersView) throws ServiceException;

    @WebMethod(action = "/oracle/summit/model/amservice/common/deleteOrdersView", operationName = "deleteOrdersView")
    @RequestWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/", localName = "deleteOrdersView")
    @ResponseWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/",
                     localName = "deleteOrdersViewResponse")
    void deleteOrdersView(@WebParam(mode = WebParam.Mode.IN, name = "ordersView")
                          OrdersViewSDO ordersView) throws ServiceException;

    @WebMethod(action = "/oracle/summit/model/amservice/common/mergeOrdersView", operationName = "mergeOrdersView")
    @RequestWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/", localName = "mergeOrdersView")
    @ResponseWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/",
                     localName = "mergeOrdersViewResponse")
    @WebResult(name = "result")
    OrdersViewSDO mergeOrdersView(@WebParam(mode = WebParam.Mode.IN, name = "ordersView")
                                  OrdersViewSDO ordersView) throws ServiceException;

    @WebMethod(action = "/oracle/summit/model/amservice/common/getDfltCtrlHints", operationName = "getDfltCtrlHints")
    @RequestWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/", localName = "getDfltCtrlHints")
    @ResponseWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/",
                     localName = "getDfltCtrlHintsResponse")
    @WebResult(name = "result")
    List<AttrCtrlHints> getDfltCtrlHints(@WebParam(mode = WebParam.Mode.IN, name = "viewName") String viewName,
                                         @WebParam(mode = WebParam.Mode.IN, name = "localeName")
                                         String localeName) throws ServiceException;

    @WebMethod(action = "/oracle/summit/model/amservice/common/findOrdersViewOrdersViewCriteria",
               operationName = "findOrdersViewOrdersViewCriteria")
    @RequestWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/",
                    localName = "findOrdersViewOrdersViewCriteria")
    @ResponseWrapper(targetNamespace = "/oracle/summit/model/amservice/common/types/",
                     localName = "findOrdersViewOrdersViewCriteriaResponse")
    @WebResult(name = "result")
    List<OrdersViewSDO> findOrdersViewOrdersViewCriteria(@WebParam(mode = WebParam.Mode.IN, name = "findCriteria")
                                                         FindCriteria findCriteria,
                                                         @WebParam(mode = WebParam.Mode.IN, name = "OrdId")
                                                         String OrdId,
                                                         @WebParam(mode = WebParam.Mode.IN, name = "findControl")
                                                         FindControl findControl) throws ServiceException;
}
