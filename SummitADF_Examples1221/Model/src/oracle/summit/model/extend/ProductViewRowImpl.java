package oracle.summit.model.extend;

import java.math.BigDecimal;

import oracle.jbo.server.AttributeDefImpl;


import oracle.summit.base.SummitViewRowImpl;
import oracle.summit.model.extend.common.ProductViewRow;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Mar 16 15:37:24 CDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProductViewRowImpl extends SummitViewRowImpl implements ProductViewRow{

    public static final int ENTITY_PRODUCT = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ProductViewRowImpl obj) {
                return obj.getId();
            }

            public void put(ProductViewRowImpl obj, Object value) {
                obj.setId((Integer)value);
            }
        }
        ,
        Name {
            public Object get(ProductViewRowImpl obj) {
                return obj.getName();
            }

            public void put(ProductViewRowImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        ShortDesc {
            public Object get(ProductViewRowImpl obj) {
                return obj.getShortDesc();
            }

            public void put(ProductViewRowImpl obj, Object value) {
                obj.setShortDesc((String)value);
            }
        }
        ,
        LongtextId {
            public Object get(ProductViewRowImpl obj) {
                return obj.getLongtextId();
            }

            public void put(ProductViewRowImpl obj, Object value) {
                obj.setLongtextId((Integer)value);
            }
        }
        ,
        ImageId {
            public Object get(ProductViewRowImpl obj) {
                return obj.getImageId();
            }

            public void put(ProductViewRowImpl obj, Object value) {
                obj.setImageId((Integer)value);
            }
        }
        ,
        SuggestedWhlslPrice {
            public Object get(ProductViewRowImpl obj) {
                return obj.getSuggestedWhlslPrice();
            }

            public void put(ProductViewRowImpl obj, Object value) {
                obj.setSuggestedWhlslPrice((BigDecimal)value);
            }
        }
        ,
        WhlslUnits {
            public Object get(ProductViewRowImpl obj) {
                return obj.getWhlslUnits();
            }

            public void put(ProductViewRowImpl obj, Object value) {
                obj.setWhlslUnits((String)value);
            }
        }
        ,
        SomeValue {
            public Object get(ProductViewRowImpl obj) {
                return obj.getSomeValue();
            }

            public void put(ProductViewRowImpl obj, Object value) {
                obj.setSomeValue((String)value);
            }
        }
        ,
        sfadsf {
            public Object get(ProductViewRowImpl obj) {
                return obj.getsfadsf();
            }

            public void put(ProductViewRowImpl obj, Object value) {
                obj.setsfadsf((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ProductViewRowImpl object);

        public abstract void put(ProductViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ID = AttributesEnum.Id.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int SHORTDESC = AttributesEnum.ShortDesc.index();
    public static final int LONGTEXTID = AttributesEnum.LongtextId.index();
    public static final int IMAGEID = AttributesEnum.ImageId.index();
    public static final int SUGGESTEDWHLSLPRICE = AttributesEnum.SuggestedWhlslPrice.index();
    public static final int WHLSLUNITS = AttributesEnum.WhlslUnits.index();
    public static final int SOMEVALUE = AttributesEnum.SomeValue.index();
    public static final int SFADSF = AttributesEnum.sfadsf.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProductViewRowImpl() {
    }

    /**
     * Gets Product entity object.
     * @return the Product
     */
    public ProductImpl getProduct() {
        return (ProductImpl)getEntity(ENTITY_PRODUCT);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Integer value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for SHORT_DESC using the alias name ShortDesc.
     * @return the SHORT_DESC
     */
    public String getShortDesc() {
        return (String) getAttributeInternal(SHORTDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for SHORT_DESC using the alias name ShortDesc.
     * @param value value to set the SHORT_DESC
     */
    public void setShortDesc(String value) {
        setAttributeInternal(SHORTDESC, value);
    }

    /**
     * Gets the attribute value for LONGTEXT_ID using the alias name LongtextId.
     * @return the LONGTEXT_ID
     */
    public Integer getLongtextId() {
        return (Integer) getAttributeInternal(LONGTEXTID);
    }

    /**
     * Sets <code>value</code> as attribute value for LONGTEXT_ID using the alias name LongtextId.
     * @param value value to set the LONGTEXT_ID
     */
    public void setLongtextId(Integer value) {
        setAttributeInternal(LONGTEXTID, value);
    }

    /**
     * Gets the attribute value for IMAGE_ID using the alias name ImageId.
     * @return the IMAGE_ID
     */
    public Integer getImageId() {
        return (Integer) getAttributeInternal(IMAGEID);
    }

    /**
     * Sets <code>value</code> as attribute value for IMAGE_ID using the alias name ImageId.
     * @param value value to set the IMAGE_ID
     */
    public void setImageId(Integer value) {
        setAttributeInternal(IMAGEID, value);
    }

    /**
     * Gets the attribute value for SUGGESTED_WHLSL_PRICE using the alias name SuggestedWhlslPrice.
     * @return the SUGGESTED_WHLSL_PRICE
     */
    public BigDecimal getSuggestedWhlslPrice() {
        return (BigDecimal) getAttributeInternal(SUGGESTEDWHLSLPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for SUGGESTED_WHLSL_PRICE using the alias name SuggestedWhlslPrice.
     * @param value value to set the SUGGESTED_WHLSL_PRICE
     */
    public void setSuggestedWhlslPrice(BigDecimal value) {
        setAttributeInternal(SUGGESTEDWHLSLPRICE, value);
    }

    /**
     * Gets the attribute value for WHLSL_UNITS using the alias name WhlslUnits.
     * @return the WHLSL_UNITS
     */
    public String getWhlslUnits() {
        return (String) getAttributeInternal(WHLSLUNITS);
    }

    /**
     * Sets <code>value</code> as attribute value for WHLSL_UNITS using the alias name WhlslUnits.
     * @param value value to set the WHLSL_UNITS
     */
    public void setWhlslUnits(String value) {
        setAttributeInternal(WHLSLUNITS, value);
    }

    /**
     * Gets the attribute value for SOME_VALUE using the alias name SomeValue.
     * @return the SOME_VALUE
     */
    public String getSomeValue() {
        return (String) getAttributeInternal(SOMEVALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for SOME_VALUE using the alias name SomeValue.
     * @param value value to set the SOME_VALUE
     */
    public void setSomeValue(String value) {
        setAttributeInternal(SOMEVALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute sfadsf.
     * @return the sfadsf
     */
    public String getsfadsf() {
        return (String) getAttributeInternal(SFADSF);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute sfadsf.
     * @param value value to set the  sfadsf
     */
    public void setsfadsf(String value) {
        setAttributeInternal(SFADSF, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
