package oracle.summit.model.polymorphicvo.service.server.serviceinterface;

import commonj.sdo.DataObject;

import java.lang.reflect.Method;

import java.util.List;

import javax.ejb.Remote;
import javax.ejb.Stateless;

import javax.interceptor.Interceptors;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.common.Diagnostic;
import oracle.jbo.common.sdo.SDOHelper;
import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.common.service.types.ProcessControl;
import oracle.jbo.server.svc.ServiceContextInterceptor;
import oracle.jbo.server.svc.ServiceImpl;
import oracle.jbo.service.errors.ServiceException;

import oracle.summit.model.polymorphicvo.service.common.serviceinterface.AppModuleService;
import oracle.summit.model.polymorphicvo.views.common.SDeptViewSDO;

import oracle.webservices.annotations.PortableWebService;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Dec 12 13:25:03 CST 2014
// ---------------------------------------------------------------------
@Stateless(name = "oracle.summit.model.polymorphicvo.service.common.AppModuleServiceBean",
           mappedName = "AppModuleServiceBean")
@Remote(AppModuleService.class)
@PortableWebService(targetNamespace = "http://xmlns.oracle.com/apps/hr/service/", serviceName = "AppModuleService",
                    portName = "AppModuleServiceSoapHttpPort",
                    endpointInterface =
                    "oracle.summit.model.polymorphicvo.service.common.serviceinterface.AppModuleService")
@Interceptors({ ServiceContextInterceptor.class })
public class AppModuleServiceImpl extends ServiceImpl implements AppModuleService {
    private static boolean _isInited = false;

    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleServiceImpl() {
        init();
        setApplicationModuleDefName("oracle.summit.model.polymorphicvo.service.AppModule");
        setConfigurationName("AppModuleService");
    }

    /**
     * Generated method. Do not modify. Do initialization in the constructor
     */
    protected void init() {
        if (_isInited) {
            return;
        }
        synchronized (AppModuleServiceImpl.class) {
            if (_isInited) {
                return;
            }
            try {
                SDOHelper.INSTANCE.defineSchema("oracle/summit/model/polymorphicvo/service/common/serviceinterface/",
                                                "AppModuleService.xsd");
                _isInited = true;
            } catch (Throwable t) {
                ADFLogger.createADFLogger(Diagnostic.SERVINT_RT_LOGGER).severe(t);
            }
        }
    }

    /**
     * getSDeptView1: generated method. Do not modify.
     */
    public SDeptViewSDO getSDeptView1(Integer id) throws ServiceException {
        return (SDeptViewSDO) get(new Object[] { id }, "SDeptView1", SDeptViewSDO.class);
    }

    /**
     * createSDeptView1: generated method. Do not modify.
     */
    public SDeptViewSDO createSDeptView1(SDeptViewSDO sDeptView1) throws ServiceException {
        return (SDeptViewSDO) create(sDeptView1, "SDeptView1");
    }

    /**
     * updateSDeptView1: generated method. Do not modify.
     */
    public SDeptViewSDO updateSDeptView1(SDeptViewSDO sDeptView1) throws ServiceException {
        return (SDeptViewSDO) update(sDeptView1, "SDeptView1");
    }

    /**
     * deleteSDeptView1: generated method. Do not modify.
     */
    public void deleteSDeptView1(SDeptViewSDO sDeptView1) throws ServiceException {
        delete(sDeptView1, "SDeptView1");
    }

    /**
     * mergeSDeptView1: generated method. Do not modify.
     */
    public SDeptViewSDO mergeSDeptView1(SDeptViewSDO sDeptView1) throws ServiceException {
        return (SDeptViewSDO) merge(sDeptView1, "SDeptView1");
    }

    /**
     * findSDeptView1: generated method. Do not modify.
     */
    public List<SDeptViewSDO> findSDeptView1(FindCriteria findCriteria,
                                             FindControl findControl) throws ServiceException {
        return (List<SDeptViewSDO>) find(findCriteria, findControl, "SDeptView1", SDeptViewSDO.class);
    }

    /**
     * processSDeptView1: generated method. Do not modify.
     */
    public List<SDeptViewSDO> processSDeptView1(String changeOperation, List<SDeptViewSDO> sDeptView1,
                                                ProcessControl processControl) throws ServiceException {
        return (List<SDeptViewSDO>) process(changeOperation, processControl, sDeptView1, "SDeptView1");
    }

    /**
     * getSEmpView1: generated method. Do not modify.
     */
    public DataObject getSEmpView1(Integer id) throws ServiceException {
        return (DataObject) get(new Object[] { id }, "SEmpView1", DataObject.class);
    }

    /**
     * createSEmpView1: generated method. Do not modify.
     */
    public DataObject createSEmpView1(DataObject sEmpView1) throws ServiceException {
        return (DataObject) create(sEmpView1, "SEmpView1");
    }

    /**
     * updateSEmpView1: generated method. Do not modify.
     */
    public DataObject updateSEmpView1(DataObject sEmpView1) throws ServiceException {
        return (DataObject) update(sEmpView1, "SEmpView1");
    }

    /**
     * deleteSEmpView1: generated method. Do not modify.
     */
    public void deleteSEmpView1(DataObject sEmpView1) throws ServiceException {
        delete(sEmpView1, "SEmpView1");
    }

    /**
     * mergeSEmpView1: generated method. Do not modify.
     */
    public DataObject mergeSEmpView1(DataObject sEmpView1) throws ServiceException {
        return (DataObject) merge(sEmpView1, "SEmpView1");
    }

    /**
     * findSEmpView1: generated method. Do not modify.
     */
    public List<DataObject> findSEmpView1(FindCriteria findCriteria, FindControl findControl) throws ServiceException {
        return (List<DataObject>) find(findCriteria, findControl, "SEmpView1", DataObject.class);
    }

    /**
     * findSEmpView1ByDept: generated method. Do not modify.
     */
    public List<DataObject> findSEmpView1ByDept(FindCriteria findCriteria, String bv_dName,
                                                FindControl findControl) throws ServiceException {
        return (List<DataObject>) find(findCriteria, findControl, "SEmpView1", DataObject.class, "ByDept", new NamedParam[] {
                                       new NamedParam("bv_dName", bv_dName)
    });
    }

    /**
     * processSEmpView1: generated method. Do not modify.
     */
    public List<DataObject> processSEmpView1(String changeOperation, List<DataObject> sEmpView1,
                                             ProcessControl processControl) throws ServiceException {
        return (List<DataObject>) process(changeOperation, processControl, sEmpView1, "SEmpView1");
    }
}

